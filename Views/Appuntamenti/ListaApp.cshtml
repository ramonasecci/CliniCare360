
@{
    ViewBag.Title = "Lista Appuntamenti";
}
<div class="container-lg mt-5">
    <div class="d-flex justify-content-between">
        <h2>Lista Appuntamenti</h2>
        <div class="mb-3 d-flex">
            <select id="statoFilter" class="form-select">
                <option value="Tutti">Tutti</option>
                <option value="disponibile">Disponibili</option>
                <option value="prenotato">Confermati</option>
                <option value="disdetto">Disdetti</option>
                <option value="evaso">Evasi</option>
            </select>
            <p>
                @Html.ActionLink("Aggiungi", "CreaApp", null, new { @class = "btn btn-outline-info" })
            </p>
        </div>

    </div>
  

    <div id="appuntamentiContainer" class="table-responsive">
        <table class="table">
            <thead class="thead-light">
                <tr>
                    <th>Data</th>
                    <th>Ora</th>
                    <th>Prestazione</th>
                    <th>Stato</th>
                    <th>
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil-square" viewBox="0 0 16 16">
                            <path d="M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z" />
                            <path fill-rule="evenodd" d="M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5z" />
                        </svg>
                    </th>
                </tr>
            </thead>
            <tbody id="appuntamentiTable">
            </tbody>
        </table>
    </div>
</div>


<script>
document.addEventListener('DOMContentLoaded', function () {
    const statoFilter = document.getElementById('statoFilter');

    function fetchAndFilterAppointments() {
        fetch('@Url.Action("ListaAppTot", "Appuntamenti")', {
            method: 'GET',
            headers: {
                'Content-Type': 'application/json',
            },
        })
        .then(response => response.json())
        .then(data => {
            const tableBody = document.querySelector('#appuntamentiTable');
            let rowsHtml = '';
            tableBody.innerHTML = '';
            const filtroStato = statoFilter.value;
            const filteredData = data.data.filter(appuntamento => filtroStato === 'Tutti' || appuntamento.Stato === filtroStato);
            if (data.success && filteredData) {
                filteredData.forEach(appuntamento => {
                    rowsHtml += `
                        <tr>
                            <td>${appuntamento.Data}</td>
                            <td>${appuntamento.Ora}</td>
                            <td>${appuntamento.Prestazione}</td>
                            <td>${appuntamento.Stato}</td>
                            <td><a href="/Appuntamenti/DettaglioApp?id=${appuntamento.Id}" class="btn btn-custom rounded-pill">Dettaglio</a></td>
                        </tr>
                    `;
                });
                tableBody.innerHTML = rowsHtml;
            }
        })
        .catch(error => console.error('Errore nel recupero degli appuntamenti:', error));
    }


    statoFilter.addEventListener('change', fetchAndFilterAppointments);


    fetchAndFilterAppointments();
});

</script>
